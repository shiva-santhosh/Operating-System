loadi(2, 15);
loadi(3, 16);
loadi(4, 17);
loadi(5, 18);
loadi(16,29);
loadi(17,30);

loadi(20,33);
loadi(21,34);
loadi(42,55);
loadi(43,56);
loadi(44,57);
loadi(45,58);
loadi(59,3);
loadi(60,4);

loadi(22,35);
loadi(23,36);
loadi(63,13);
loadi(64,14);
loadi(50,63);
loadi(51,64);
loadi(40,53);
loadi(41,54);
loadi(48,61);
loadi(49,62);
loadi(65, 7);
loadi(66, 8);

loadi(8,21) ;
loadi(9,22) ;
loadi(14,27) ;
loadi(15,28) ;

loadi(6,19) ;
loadi(7,20) ;

loadi(61,2) ;

loadi (18,31) ;
loadi (19,32) ;

loadi (32,45) ;
loadi (33,46) ;

loadi (24,37) ;
loadi (25,38) ;

loadi(28,41);
loadi(29,42);
loadi(30,43);
loadi(31,44);

loadi(10,23);
loadi(11,24);

loadi(62,5);

loadi(12,25);
loadi(13,26);

loadi(46,59);
loadi(47,60);

PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

[PROCESS_TABLE + 27] = 80;
[PROCESS_TABLE + 17] = 1;
[PROCESS_TABLE + 20] = CREATED;
[PROCESS_TABLE + 28] = 0;
[PROCESS_TABLE + 29] = 8*512;
[PROCESS_TABLE + 30] = PAGE_TABLE_BASE + 20 ;
[PROCESS_TABLE + 31] = 10 ;
[PROCESS_TABLE + 19] = 1 ;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[76*512] = [65 * 512 + 1];

alias counter R0;
counter = 2;
while( counter < MAX_PROC_NUM ) do
  [PROCESS_TABLE + counter*16 + 4] = TERMINATED;
  counter = counter + 1;
endwhile;

counter=0;
while(counter<32) do 
     [SEMAPHORE_TABLE+counter*4+0]=-1;
     [SEMAPHORE_TABLE+counter*4+1]=0;
	counter=counter+1;
endwhile;

counter = 0 ;
while ( counter < 32) do
	[OPEN_FILE_TABLE + 4*counter] = -1 ;
	[OPEN_FILE_TABLE + 4*counter + 1] = 0 ;
	counter = counter + 1 ; 
endwhile ;

counter = 0 ;
while(counter <= 90 ) do
	[MEMORY_FREE_LIST + counter ] = 1;
	counter = counter + 1 ;
endwhile ;

[DISK_MAP_TABLE+10+2]=[PTBR+4];
[DISK_MAP_TABLE+10+3]=[PTBR+6];
[DISK_MAP_TABLE+10+4]=[PTBR+8];
[DISK_MAP_TABLE+10+5]=[PTBR+10];
[DISK_MAP_TABLE+10+6]=[PTBR+12];
[DISK_MAP_TABLE+10+7]=[PTBR+14];
[DISK_MAP_TABLE+10+8]=[PTBR+16];
[DISK_MAP_TABLE+9+10]=[PTBR+18];


counter = 0;

while (counter < MAX_FILE_NUM)do
	[FILE_STATUS_TABLE + counter*4] = -1;
	[FILE_STATUS_TABLE + counter*4 + 1] = -1;
	counter = counter + 1;
endwhile ;

counter = 0 ;
while(counter < MAX_BUFFER) do
	[BUFFER_TABLE + counter*4 ] = -1;
	[BUFFER_TABLE + counter*4 + 1] =  0;
	[BUFFER_TABLE + counter*4 + 2] = -1;
	counter = counter + 1 ;
endwhile;

counter = 494;                                                            
while(counter < 512) do                                                   
    [[PROCESS_TABLE+27] * 512 + counter] = -1;                        
    [[PROCESS_TABLE+27] * 512 + counter + 1] = -1;                       
    counter = counter + 2;
endwhile;

[TERMINAL_STATUS_TABLE+0 ] = 0;
[SYSTEM_STATUS_TABLE + 2 ] = 37 ;
[SYSTEM_STATUS_TABLE + 3] = 0 ;
[DISK_STATUS_TABLE] = 0 ;
return;



