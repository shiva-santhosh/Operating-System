alias currentPID R0;
breakpoint ;
currentPID = [SYSTEM_STATUS_TABLE+1];
multipush(BP);

alias processTable R1;
processTable = PROCESS_TABLE + currentPID * 16;
[processTable + 12] = SP % 512;
[processTable + 14] = PTBR;
[processTable + 15] = PTLR;

alias counter R2;
alias newpid R3;

newpid = -1;
alias num_proc R6;
num_proc = 0;

counter = 1;
while(counter<MAX_PROC_NUM) do
      currentPID=currentPID+1;
      if(([PROCESS_TABLE+(currentPID)*16+4]==CREATED) || ([PROCESS_TABLE+(currentPID)*16+4]==READY)) then
          newpid=currentPID;
          break;
      endif;
      if(currentPID>=(MAX_PROC_NUM-1)) then
           currentPID = 0;
      endif;
      counter  = counter+1;
endwhile;

breakpoint;

if(newpid == -1) then
   newpid = 0;
endif;

alias newProcessTable R4;
newProcessTable = PROCESS_TABLE + newpid * 16; 

SP =  [newProcessTable + 11] * 512 + [newProcessTable + 12] ;
PTBR = [newProcessTable + 14];
PTLR = [newProcessTable + 15];
[SYSTEM_STATUS_TABLE + 1] = newpid;
if([newProcessTable + 4] == CREATED) then
  [newProcessTable + 4] = RUNNING;
  BP = [[newProcessTable + 11]*512] ;
  SP = [newProcessTable + 13]; 
  [newProcessTable+9] = 0;
  breakpoint;
  ireturn;
endif;
[newProcessTable + 4] = RUNNING;
multipop(BP);
return;