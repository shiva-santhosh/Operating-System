[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+9] = 7 ;
alias userSP R7 ;
userSP = SP ;

[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;

alias fileDescriptor R4;
fileDescriptor = [([PTBR + 2 * ((userSP - 4)/ 512)] * 512) + (userSP-4)%512];

alias retVal R0 ;
retVal = [PTBR + 2 * ((userSP - 1)/ 512)] * 512 + (userSP - 1) % 512 ;

if(fileDescriptor == -1) then 
        multipush(R0,R1,R2,R3,R4,R5,R7);
        R1 = 4;
        R2 = [SYSTEM_STATUS_TABLE + 1];
        R3 = [[PTBR + 2 * ((userSP - 3) / 512)] * 512 + (userSP - 3) % 512];
        call MOD_4;
        multipop(R0,R1,R2,R3,R4,R5,R7);
else
        if(fileDescriptor < 0 || fileDescriptor > 7) then 
                [retVal] = -1 ;
                [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
                SP = userSP;
                ireturn;
        endif ;
        alias userPage R2; 
        userPage = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] ;

        if( [userPage*512 + 512 - 16 + 2*fileDescriptor] != FILE)then 
                [retVal] = -1 ;
                SP = userSP;
                [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
                ireturn;                
        endif ;
        alias index R3 ;
        index = [userPage*512 + 512 - 16 + 2*fileDescriptor+1] ;
        alias inode R5 ;
        inode = [OPEN_FILE_TABLE + index*4] ;
        multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9);
        R1 = 4;
        R2 = inode;
        R3 = [SYSTEM_STATUS_TABLE+1];
        call MOD_0;
        multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9);

        if (retVal == -1) then 
                retVal = [PTBR + 2 * ((userSP - 1)/ 512)] * 512 + (userSP - 1) % 512 ;
                [retVal] = -1 ;
                [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
                SP = userSP;
                ireturn;  
        endif ;

        alias lseek R6 ;
        lseek = [OPEN_FILE_TABLE + 4*index + 2] ;

        alias word R10;
        word = [[PTBR + 2 * ((userSP - 3) / 512)] * 512 + (userSP - 3) % 512];

        alias physicalAddress R1 ;

        physicalAddress = [PTBR + 2*(word/512)]*512+ (word)%512;
        

        if(inode == INODE_ROOT ) then 
                if(lseek == 480) then 
                        multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
                        R1 = 5;
                        R2 = inode;
                        R3 = [SYSTEM_STATUS_TABLE + 1];
                        call MOD_0;
                        multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
                        retVal = [PTBR + 2 * ((userSP - 1)/ 512)] * 512 + (userSP - 1) % 512 ;
                        [retVal] = -2 ;
                        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
                        SP = userSP;
                        ireturn; 

                endif ;
                [physicalAddress] = [ROOT_FILE + lseek];
                [OPEN_FILE_TABLE + 4*index + 2] = [OPEN_FILE_TABLE + 4*index + 2] + 1;
        else
                if (lseek == [INODE_TABLE + 16*inode + 2]) then
                        multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
                        R1 = 5;
                        R2 = inode;
                        R3 = [SYSTEM_STATUS_TABLE + 1];
                        call MOD_0;
                        multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
                        retVal = [PTBR + 2 * ((userSP - 1)/ 512)] * 512 + (userSP - 1) % 512 ;           
                        [retVal] = -2;
                        SP = userSP;
                        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
                        ireturn; 
                endif ;

                alias diskBlock R11 ;
                diskBlock = [INODE_TABLE + 16*inode + 8 + (lseek/512)];

                multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11);
                R1 = 2;
                R2 = diskBlock;
                R3 = lseek%512;
                R4 = physicalAddress;
                call MOD_3;
                multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11);

                print [physicalAddress];
                [OPEN_FILE_TABLE + 4*index + 2] = [OPEN_FILE_TABLE + 4*index + 2] + 1;
        endif ;
        multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11);
        R1 = 5 ; 
        R2 = inode ;
        R3 = [SYSTEM_STATUS_TABLE+1];
        call MOD_0;
        multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11);
endif ;
retVal = [PTBR + 2 *( (userSP - 1)/ 512)] * 512 + (userSP - 1) % 512 ;         
[retVal] = 0;
SP = userSP;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
ireturn;