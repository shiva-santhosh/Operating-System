alias functionNum R1 ;
if (functionNum == 1 )then
	[ SYSTEM_STATUS_TABLE + 3 ] = [  SYSTEM_STATUS_TABLE + 3 ]+1;
	while( [SYSTEM_STATUS_TABLE + 2] == 0 ) do
		alias PID R2 ;
		[PROCESS_TABLE + PID*16 + 4] = WAIT_MEM ;
		multipush(R1 , R2) ;
		call MOD_5 ;
		multipop(R1 , R2) ;
	endwhile ;

	[ SYSTEM_STATUS_TABLE + 2 ] = [ SYSTEM_STATUS_TABLE + 2 ] - 1;
	[ SYSTEM_STATUS_TABLE + 3 ] = [ SYSTEM_STATUS_TABLE + 3 ] - 1;

	alias retVal R0  ;
	alias counter R1 ;
	counter = 1 ;
	while(counter < 128 ) do
		if([MEMORY_FREE_LIST + counter ] == 0 ) then
			retVal = counter ;
			[ MEMORY_FREE_LIST + counter ] = 1;
			break ;
		endif;
		counter = counter + 1 ;
	endwhile ;
	return ;
endif ;

if ( functionNum == 2) then 
	alias pageNum R2 ;
	[MEMORY_FREE_LIST + pageNum ] = [MEMORY_FREE_LIST + pageNum ] -1 ;
	if( [MEMORY_FREE_LIST + pageNum ] == 0 )then 
		[SYSTEM_STATUS_TABLE + 2] =  [SYSTEM_STATUS_TABLE + 2] + 1 ;
	endif ;
	alias counter R4 ;
	counter = 0 ;

	while ( counter < MAX_PROC_NUM) do
		if( [ PROCESS_TABLE + counter*16 + 4 ] == WAIT_MEM ) then
			[ PROCESS_TABLE + counter*16 + 4 ] = READY ; 
		endif ;
	counter = counter + 1 ;
	endwhile ;
	return ;
endif ;

if ( functionNum == 5) then 

	alias blockNum R2 ;
	alias PID R3;
	alias flag R4 ;
	flag = -1 ;
	PID  = 0 ;
	while (PID < MAX_PROC_NUM )do
		if([DISK_MAP_TABLE + PID*10 + 4] == blockNum && [PAGE_TABLE_BASE+ PID*20 + 8]!=-1 )then
			flag = 0;
			break ;
		endif;
		if([DISK_MAP_TABLE + PID*10 + 5] == blockNum && [PAGE_TABLE_BASE+ PID*20 + 10]!=-1)then
			flag = 1;
			break ;
		endif;
		if([DISK_MAP_TABLE + PID*10 + 6] == blockNum && [PAGE_TABLE_BASE+ PID*20 + 14]!=-1)then
			flag = 2 ;
			break ;
		endif ;
		if([DISK_MAP_TABLE + PID*10 + 7] == blockNum && [PAGE_TABLE_BASE+ PID*20 + 14]!=-1)then
			flag = 3 ;
			break ;
		endif ;
		PID = PID + 1 ;
	endwhile;
	alias retVal R0 ;
	if(flag != -1)then
		retVal = [PAGE_TABLE_BASE + PID*20 + 8 + 2*flag] ;
		[MEMORY_FREE_LIST+retVal]=[MEMORY_FREE_LIST+retVal]+1;
		return ;
	endif ;

	alias freePage R7 ;
	multipush(R0 ,R1 ,R2 ,R3,R4) ;
	functionNum = 1 ;
	call MOD_2 ;
	freePage = retVal ;
	multipop(R0 ,R1 ,R2 ,R3,R4) ;

	multipush(R0 ,R1 ,R2 ,R3,R4,R5,R7) ;
	functionNum = 2 ;
	alias p R3 ;
	p = freePage ;
	alias b R4 ;
	b = blockNum ;
	alias pid R2 ;
	pid = [SYSTEM_STATUS_TABLE + 1];
	call MOD_4 ;
	multipop (R0 ,R1 ,R2 ,R3,R4,R5,R7) ;
	retVal = freePage ;
	return ;
endif ;
if(functionNum==4) then
   alias pid R3;
   alias block R2;
   [DISK_FREE_LIST + block]= 0;
   return;
endif; 
















